
444444.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006ec  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000870  00000000  00000000  00000740  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000008a4  00000000  00000000  00000fb0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 4c 03 	call	0x698	; 0x698 <main>
  64:	0c 94 74 03 	jmp	0x6e8	; 0x6e8 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_SetPortDirection>:
#include"BIT_MATH.h"
#include"DIO.h"
#include<avr/io.h>
#include<util/delay.h>

void DIO_SetPortDirection(u8 u8PortIdCopy, u8 u8PortDirCopy){
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <DIO_SetPortDirection+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <DIO_SetPortDirection+0x8>
  74:	cd b7       	in	r28, 0x3d	; 61
  76:	de b7       	in	r29, 0x3e	; 62
  78:	89 83       	std	Y+1, r24	; 0x01
  7a:	6a 83       	std	Y+2, r22	; 0x02
	if(u8PortIdCopy<=DIO_PORTA){
  7c:	89 81       	ldd	r24, Y+1	; 0x01
  7e:	88 23       	and	r24, r24
  80:	91 f5       	brne	.+100    	; 0xe6 <DIO_SetPortDirection+0x7a>
	switch(u8PortIdCopy)
  82:	89 81       	ldd	r24, Y+1	; 0x01
  84:	28 2f       	mov	r18, r24
  86:	30 e0       	ldi	r19, 0x00	; 0
  88:	3c 83       	std	Y+4, r19	; 0x04
  8a:	2b 83       	std	Y+3, r18	; 0x03
  8c:	8b 81       	ldd	r24, Y+3	; 0x03
  8e:	9c 81       	ldd	r25, Y+4	; 0x04
  90:	81 30       	cpi	r24, 0x01	; 1
  92:	91 05       	cpc	r25, r1
  94:	d1 f0       	breq	.+52     	; 0xca <DIO_SetPortDirection+0x5e>
  96:	2b 81       	ldd	r18, Y+3	; 0x03
  98:	3c 81       	ldd	r19, Y+4	; 0x04
  9a:	22 30       	cpi	r18, 0x02	; 2
  9c:	31 05       	cpc	r19, r1
  9e:	2c f4       	brge	.+10     	; 0xaa <DIO_SetPortDirection+0x3e>
  a0:	8b 81       	ldd	r24, Y+3	; 0x03
  a2:	9c 81       	ldd	r25, Y+4	; 0x04
  a4:	00 97       	sbiw	r24, 0x00	; 0
  a6:	61 f0       	breq	.+24     	; 0xc0 <DIO_SetPortDirection+0x54>
  a8:	1e c0       	rjmp	.+60     	; 0xe6 <DIO_SetPortDirection+0x7a>
  aa:	2b 81       	ldd	r18, Y+3	; 0x03
  ac:	3c 81       	ldd	r19, Y+4	; 0x04
  ae:	22 30       	cpi	r18, 0x02	; 2
  b0:	31 05       	cpc	r19, r1
  b2:	81 f0       	breq	.+32     	; 0xd4 <DIO_SetPortDirection+0x68>
  b4:	8b 81       	ldd	r24, Y+3	; 0x03
  b6:	9c 81       	ldd	r25, Y+4	; 0x04
  b8:	83 30       	cpi	r24, 0x03	; 3
  ba:	91 05       	cpc	r25, r1
  bc:	81 f0       	breq	.+32     	; 0xde <DIO_SetPortDirection+0x72>
  be:	13 c0       	rjmp	.+38     	; 0xe6 <DIO_SetPortDirection+0x7a>
	{
	case DIO_PORTA: DDRA=u8PortDirCopy;break;
  c0:	ea e3       	ldi	r30, 0x3A	; 58
  c2:	f0 e0       	ldi	r31, 0x00	; 0
  c4:	8a 81       	ldd	r24, Y+2	; 0x02
  c6:	80 83       	st	Z, r24
  c8:	0e c0       	rjmp	.+28     	; 0xe6 <DIO_SetPortDirection+0x7a>
	case DIO_PORTB: DDRB=u8PortDirCopy;break;
  ca:	e7 e3       	ldi	r30, 0x37	; 55
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	8a 81       	ldd	r24, Y+2	; 0x02
  d0:	80 83       	st	Z, r24
  d2:	09 c0       	rjmp	.+18     	; 0xe6 <DIO_SetPortDirection+0x7a>
	case DIO_PORTC: DDRC=u8PortDirCopy;break;
  d4:	e4 e3       	ldi	r30, 0x34	; 52
  d6:	f0 e0       	ldi	r31, 0x00	; 0
  d8:	8a 81       	ldd	r24, Y+2	; 0x02
  da:	80 83       	st	Z, r24
  dc:	04 c0       	rjmp	.+8      	; 0xe6 <DIO_SetPortDirection+0x7a>
	case DIO_PORTD: DDRD=u8PortDirCopy;break;
  de:	e1 e3       	ldi	r30, 0x31	; 49
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	8a 81       	ldd	r24, Y+2	; 0x02
  e4:	80 83       	st	Z, r24
	}
	}
}
  e6:	0f 90       	pop	r0
  e8:	0f 90       	pop	r0
  ea:	0f 90       	pop	r0
  ec:	0f 90       	pop	r0
  ee:	cf 91       	pop	r28
  f0:	df 91       	pop	r29
  f2:	08 95       	ret

000000f4 <DIO_SetPinDirection>:

void DIO_SetPinDirection(u8 u8PortIdCopy,u8 u8PinIdCopy, u8 u8PinDirCopy)
{
  f4:	df 93       	push	r29
  f6:	cf 93       	push	r28
  f8:	cd b7       	in	r28, 0x3d	; 61
  fa:	de b7       	in	r29, 0x3e	; 62
  fc:	27 97       	sbiw	r28, 0x07	; 7
  fe:	0f b6       	in	r0, 0x3f	; 63
 100:	f8 94       	cli
 102:	de bf       	out	0x3e, r29	; 62
 104:	0f be       	out	0x3f, r0	; 63
 106:	cd bf       	out	0x3d, r28	; 61
 108:	89 83       	std	Y+1, r24	; 0x01
 10a:	6a 83       	std	Y+2, r22	; 0x02
 10c:	4b 83       	std	Y+3, r20	; 0x03
	if((u8PortIdCopy<=DIO_PORTD)&&(u8PinIdCopy<=DIO_PIN7))
 10e:	89 81       	ldd	r24, Y+1	; 0x01
 110:	84 30       	cpi	r24, 0x04	; 4
 112:	08 f0       	brcs	.+2      	; 0x116 <DIO_SetPinDirection+0x22>
 114:	ee c0       	rjmp	.+476    	; 0x2f2 <DIO_SetPinDirection+0x1fe>
 116:	8a 81       	ldd	r24, Y+2	; 0x02
 118:	88 30       	cpi	r24, 0x08	; 8
 11a:	08 f0       	brcs	.+2      	; 0x11e <DIO_SetPinDirection+0x2a>
 11c:	ea c0       	rjmp	.+468    	; 0x2f2 <DIO_SetPinDirection+0x1fe>
	{
		if(u8PinDirCopy==DIO_OUTPUT)
 11e:	8b 81       	ldd	r24, Y+3	; 0x03
 120:	81 30       	cpi	r24, 0x01	; 1
 122:	09 f0       	breq	.+2      	; 0x126 <DIO_SetPinDirection+0x32>
 124:	6f c0       	rjmp	.+222    	; 0x204 <DIO_SetPinDirection+0x110>
		{
			switch(u8PortIdCopy)
 126:	89 81       	ldd	r24, Y+1	; 0x01
 128:	28 2f       	mov	r18, r24
 12a:	30 e0       	ldi	r19, 0x00	; 0
 12c:	3f 83       	std	Y+7, r19	; 0x07
 12e:	2e 83       	std	Y+6, r18	; 0x06
 130:	8e 81       	ldd	r24, Y+6	; 0x06
 132:	9f 81       	ldd	r25, Y+7	; 0x07
 134:	81 30       	cpi	r24, 0x01	; 1
 136:	91 05       	cpc	r25, r1
 138:	49 f1       	breq	.+82     	; 0x18c <DIO_SetPinDirection+0x98>
 13a:	2e 81       	ldd	r18, Y+6	; 0x06
 13c:	3f 81       	ldd	r19, Y+7	; 0x07
 13e:	22 30       	cpi	r18, 0x02	; 2
 140:	31 05       	cpc	r19, r1
 142:	2c f4       	brge	.+10     	; 0x14e <DIO_SetPinDirection+0x5a>
 144:	8e 81       	ldd	r24, Y+6	; 0x06
 146:	9f 81       	ldd	r25, Y+7	; 0x07
 148:	00 97       	sbiw	r24, 0x00	; 0
 14a:	61 f0       	breq	.+24     	; 0x164 <DIO_SetPinDirection+0x70>
 14c:	d2 c0       	rjmp	.+420    	; 0x2f2 <DIO_SetPinDirection+0x1fe>
 14e:	2e 81       	ldd	r18, Y+6	; 0x06
 150:	3f 81       	ldd	r19, Y+7	; 0x07
 152:	22 30       	cpi	r18, 0x02	; 2
 154:	31 05       	cpc	r19, r1
 156:	71 f1       	breq	.+92     	; 0x1b4 <DIO_SetPinDirection+0xc0>
 158:	8e 81       	ldd	r24, Y+6	; 0x06
 15a:	9f 81       	ldd	r25, Y+7	; 0x07
 15c:	83 30       	cpi	r24, 0x03	; 3
 15e:	91 05       	cpc	r25, r1
 160:	e9 f1       	breq	.+122    	; 0x1dc <DIO_SetPinDirection+0xe8>
 162:	c7 c0       	rjmp	.+398    	; 0x2f2 <DIO_SetPinDirection+0x1fe>
			{
			case DIO_PORTA:SET_BIT(DDRA,u8PinIdCopy);break;
 164:	aa e3       	ldi	r26, 0x3A	; 58
 166:	b0 e0       	ldi	r27, 0x00	; 0
 168:	ea e3       	ldi	r30, 0x3A	; 58
 16a:	f0 e0       	ldi	r31, 0x00	; 0
 16c:	80 81       	ld	r24, Z
 16e:	48 2f       	mov	r20, r24
 170:	8a 81       	ldd	r24, Y+2	; 0x02
 172:	28 2f       	mov	r18, r24
 174:	30 e0       	ldi	r19, 0x00	; 0
 176:	81 e0       	ldi	r24, 0x01	; 1
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	02 2e       	mov	r0, r18
 17c:	02 c0       	rjmp	.+4      	; 0x182 <DIO_SetPinDirection+0x8e>
 17e:	88 0f       	add	r24, r24
 180:	99 1f       	adc	r25, r25
 182:	0a 94       	dec	r0
 184:	e2 f7       	brpl	.-8      	; 0x17e <DIO_SetPinDirection+0x8a>
 186:	84 2b       	or	r24, r20
 188:	8c 93       	st	X, r24
 18a:	b3 c0       	rjmp	.+358    	; 0x2f2 <DIO_SetPinDirection+0x1fe>
			case DIO_PORTB:SET_BIT(DDRB,u8PinIdCopy);break;
 18c:	a7 e3       	ldi	r26, 0x37	; 55
 18e:	b0 e0       	ldi	r27, 0x00	; 0
 190:	e7 e3       	ldi	r30, 0x37	; 55
 192:	f0 e0       	ldi	r31, 0x00	; 0
 194:	80 81       	ld	r24, Z
 196:	48 2f       	mov	r20, r24
 198:	8a 81       	ldd	r24, Y+2	; 0x02
 19a:	28 2f       	mov	r18, r24
 19c:	30 e0       	ldi	r19, 0x00	; 0
 19e:	81 e0       	ldi	r24, 0x01	; 1
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	02 2e       	mov	r0, r18
 1a4:	02 c0       	rjmp	.+4      	; 0x1aa <DIO_SetPinDirection+0xb6>
 1a6:	88 0f       	add	r24, r24
 1a8:	99 1f       	adc	r25, r25
 1aa:	0a 94       	dec	r0
 1ac:	e2 f7       	brpl	.-8      	; 0x1a6 <DIO_SetPinDirection+0xb2>
 1ae:	84 2b       	or	r24, r20
 1b0:	8c 93       	st	X, r24
 1b2:	9f c0       	rjmp	.+318    	; 0x2f2 <DIO_SetPinDirection+0x1fe>
			case DIO_PORTC:SET_BIT(DDRC,u8PinIdCopy);break;
 1b4:	a4 e3       	ldi	r26, 0x34	; 52
 1b6:	b0 e0       	ldi	r27, 0x00	; 0
 1b8:	e4 e3       	ldi	r30, 0x34	; 52
 1ba:	f0 e0       	ldi	r31, 0x00	; 0
 1bc:	80 81       	ld	r24, Z
 1be:	48 2f       	mov	r20, r24
 1c0:	8a 81       	ldd	r24, Y+2	; 0x02
 1c2:	28 2f       	mov	r18, r24
 1c4:	30 e0       	ldi	r19, 0x00	; 0
 1c6:	81 e0       	ldi	r24, 0x01	; 1
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	02 2e       	mov	r0, r18
 1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <DIO_SetPinDirection+0xde>
 1ce:	88 0f       	add	r24, r24
 1d0:	99 1f       	adc	r25, r25
 1d2:	0a 94       	dec	r0
 1d4:	e2 f7       	brpl	.-8      	; 0x1ce <DIO_SetPinDirection+0xda>
 1d6:	84 2b       	or	r24, r20
 1d8:	8c 93       	st	X, r24
 1da:	8b c0       	rjmp	.+278    	; 0x2f2 <DIO_SetPinDirection+0x1fe>
			case DIO_PORTD:SET_BIT(DDRD,u8PinIdCopy);break;
 1dc:	a1 e3       	ldi	r26, 0x31	; 49
 1de:	b0 e0       	ldi	r27, 0x00	; 0
 1e0:	e1 e3       	ldi	r30, 0x31	; 49
 1e2:	f0 e0       	ldi	r31, 0x00	; 0
 1e4:	80 81       	ld	r24, Z
 1e6:	48 2f       	mov	r20, r24
 1e8:	8a 81       	ldd	r24, Y+2	; 0x02
 1ea:	28 2f       	mov	r18, r24
 1ec:	30 e0       	ldi	r19, 0x00	; 0
 1ee:	81 e0       	ldi	r24, 0x01	; 1
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	02 2e       	mov	r0, r18
 1f4:	02 c0       	rjmp	.+4      	; 0x1fa <DIO_SetPinDirection+0x106>
 1f6:	88 0f       	add	r24, r24
 1f8:	99 1f       	adc	r25, r25
 1fa:	0a 94       	dec	r0
 1fc:	e2 f7       	brpl	.-8      	; 0x1f6 <DIO_SetPinDirection+0x102>
 1fe:	84 2b       	or	r24, r20
 200:	8c 93       	st	X, r24
 202:	77 c0       	rjmp	.+238    	; 0x2f2 <DIO_SetPinDirection+0x1fe>
			}
		}
		else if(u8PinDirCopy==DIO_INPUT)
 204:	8b 81       	ldd	r24, Y+3	; 0x03
 206:	88 23       	and	r24, r24
 208:	09 f0       	breq	.+2      	; 0x20c <DIO_SetPinDirection+0x118>
 20a:	73 c0       	rjmp	.+230    	; 0x2f2 <DIO_SetPinDirection+0x1fe>
		{
			switch(u8PortIdCopy)
 20c:	89 81       	ldd	r24, Y+1	; 0x01
 20e:	28 2f       	mov	r18, r24
 210:	30 e0       	ldi	r19, 0x00	; 0
 212:	3d 83       	std	Y+5, r19	; 0x05
 214:	2c 83       	std	Y+4, r18	; 0x04
 216:	8c 81       	ldd	r24, Y+4	; 0x04
 218:	9d 81       	ldd	r25, Y+5	; 0x05
 21a:	81 30       	cpi	r24, 0x01	; 1
 21c:	91 05       	cpc	r25, r1
 21e:	59 f1       	breq	.+86     	; 0x276 <DIO_SetPinDirection+0x182>
 220:	2c 81       	ldd	r18, Y+4	; 0x04
 222:	3d 81       	ldd	r19, Y+5	; 0x05
 224:	22 30       	cpi	r18, 0x02	; 2
 226:	31 05       	cpc	r19, r1
 228:	2c f4       	brge	.+10     	; 0x234 <DIO_SetPinDirection+0x140>
 22a:	8c 81       	ldd	r24, Y+4	; 0x04
 22c:	9d 81       	ldd	r25, Y+5	; 0x05
 22e:	00 97       	sbiw	r24, 0x00	; 0
 230:	69 f0       	breq	.+26     	; 0x24c <DIO_SetPinDirection+0x158>
 232:	5f c0       	rjmp	.+190    	; 0x2f2 <DIO_SetPinDirection+0x1fe>
 234:	2c 81       	ldd	r18, Y+4	; 0x04
 236:	3d 81       	ldd	r19, Y+5	; 0x05
 238:	22 30       	cpi	r18, 0x02	; 2
 23a:	31 05       	cpc	r19, r1
 23c:	89 f1       	breq	.+98     	; 0x2a0 <DIO_SetPinDirection+0x1ac>
 23e:	8c 81       	ldd	r24, Y+4	; 0x04
 240:	9d 81       	ldd	r25, Y+5	; 0x05
 242:	83 30       	cpi	r24, 0x03	; 3
 244:	91 05       	cpc	r25, r1
 246:	09 f4       	brne	.+2      	; 0x24a <DIO_SetPinDirection+0x156>
 248:	40 c0       	rjmp	.+128    	; 0x2ca <DIO_SetPinDirection+0x1d6>
 24a:	53 c0       	rjmp	.+166    	; 0x2f2 <DIO_SetPinDirection+0x1fe>
			{
			case DIO_PORTA:CLR_BIT(DDRA,u8PinIdCopy);break;
 24c:	aa e3       	ldi	r26, 0x3A	; 58
 24e:	b0 e0       	ldi	r27, 0x00	; 0
 250:	ea e3       	ldi	r30, 0x3A	; 58
 252:	f0 e0       	ldi	r31, 0x00	; 0
 254:	80 81       	ld	r24, Z
 256:	48 2f       	mov	r20, r24
 258:	8a 81       	ldd	r24, Y+2	; 0x02
 25a:	28 2f       	mov	r18, r24
 25c:	30 e0       	ldi	r19, 0x00	; 0
 25e:	81 e0       	ldi	r24, 0x01	; 1
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	02 2e       	mov	r0, r18
 264:	02 c0       	rjmp	.+4      	; 0x26a <DIO_SetPinDirection+0x176>
 266:	88 0f       	add	r24, r24
 268:	99 1f       	adc	r25, r25
 26a:	0a 94       	dec	r0
 26c:	e2 f7       	brpl	.-8      	; 0x266 <DIO_SetPinDirection+0x172>
 26e:	80 95       	com	r24
 270:	84 23       	and	r24, r20
 272:	8c 93       	st	X, r24
 274:	3e c0       	rjmp	.+124    	; 0x2f2 <DIO_SetPinDirection+0x1fe>
			case DIO_PORTB:CLR_BIT(DDRB,u8PinIdCopy);break;
 276:	a7 e3       	ldi	r26, 0x37	; 55
 278:	b0 e0       	ldi	r27, 0x00	; 0
 27a:	e7 e3       	ldi	r30, 0x37	; 55
 27c:	f0 e0       	ldi	r31, 0x00	; 0
 27e:	80 81       	ld	r24, Z
 280:	48 2f       	mov	r20, r24
 282:	8a 81       	ldd	r24, Y+2	; 0x02
 284:	28 2f       	mov	r18, r24
 286:	30 e0       	ldi	r19, 0x00	; 0
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	02 2e       	mov	r0, r18
 28e:	02 c0       	rjmp	.+4      	; 0x294 <DIO_SetPinDirection+0x1a0>
 290:	88 0f       	add	r24, r24
 292:	99 1f       	adc	r25, r25
 294:	0a 94       	dec	r0
 296:	e2 f7       	brpl	.-8      	; 0x290 <DIO_SetPinDirection+0x19c>
 298:	80 95       	com	r24
 29a:	84 23       	and	r24, r20
 29c:	8c 93       	st	X, r24
 29e:	29 c0       	rjmp	.+82     	; 0x2f2 <DIO_SetPinDirection+0x1fe>
			case DIO_PORTC:CLR_BIT(DDRC,u8PinIdCopy);break;
 2a0:	a4 e3       	ldi	r26, 0x34	; 52
 2a2:	b0 e0       	ldi	r27, 0x00	; 0
 2a4:	e4 e3       	ldi	r30, 0x34	; 52
 2a6:	f0 e0       	ldi	r31, 0x00	; 0
 2a8:	80 81       	ld	r24, Z
 2aa:	48 2f       	mov	r20, r24
 2ac:	8a 81       	ldd	r24, Y+2	; 0x02
 2ae:	28 2f       	mov	r18, r24
 2b0:	30 e0       	ldi	r19, 0x00	; 0
 2b2:	81 e0       	ldi	r24, 0x01	; 1
 2b4:	90 e0       	ldi	r25, 0x00	; 0
 2b6:	02 2e       	mov	r0, r18
 2b8:	02 c0       	rjmp	.+4      	; 0x2be <DIO_SetPinDirection+0x1ca>
 2ba:	88 0f       	add	r24, r24
 2bc:	99 1f       	adc	r25, r25
 2be:	0a 94       	dec	r0
 2c0:	e2 f7       	brpl	.-8      	; 0x2ba <DIO_SetPinDirection+0x1c6>
 2c2:	80 95       	com	r24
 2c4:	84 23       	and	r24, r20
 2c6:	8c 93       	st	X, r24
 2c8:	14 c0       	rjmp	.+40     	; 0x2f2 <DIO_SetPinDirection+0x1fe>
			case DIO_PORTD:CLR_BIT(DDRD,u8PinIdCopy);break;
 2ca:	a1 e3       	ldi	r26, 0x31	; 49
 2cc:	b0 e0       	ldi	r27, 0x00	; 0
 2ce:	e1 e3       	ldi	r30, 0x31	; 49
 2d0:	f0 e0       	ldi	r31, 0x00	; 0
 2d2:	80 81       	ld	r24, Z
 2d4:	48 2f       	mov	r20, r24
 2d6:	8a 81       	ldd	r24, Y+2	; 0x02
 2d8:	28 2f       	mov	r18, r24
 2da:	30 e0       	ldi	r19, 0x00	; 0
 2dc:	81 e0       	ldi	r24, 0x01	; 1
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	02 2e       	mov	r0, r18
 2e2:	02 c0       	rjmp	.+4      	; 0x2e8 <DIO_SetPinDirection+0x1f4>
 2e4:	88 0f       	add	r24, r24
 2e6:	99 1f       	adc	r25, r25
 2e8:	0a 94       	dec	r0
 2ea:	e2 f7       	brpl	.-8      	; 0x2e4 <DIO_SetPinDirection+0x1f0>
 2ec:	80 95       	com	r24
 2ee:	84 23       	and	r24, r20
 2f0:	8c 93       	st	X, r24
			}
		}
		else{}
	}
	else{}
}
 2f2:	27 96       	adiw	r28, 0x07	; 7
 2f4:	0f b6       	in	r0, 0x3f	; 63
 2f6:	f8 94       	cli
 2f8:	de bf       	out	0x3e, r29	; 62
 2fa:	0f be       	out	0x3f, r0	; 63
 2fc:	cd bf       	out	0x3d, r28	; 61
 2fe:	cf 91       	pop	r28
 300:	df 91       	pop	r29
 302:	08 95       	ret

00000304 <DIO_SetPortValue>:

void DIO_SetPortValue(u8 u8PortIdCopy, u8 u8PortValCopy)
{
 304:	df 93       	push	r29
 306:	cf 93       	push	r28
 308:	00 d0       	rcall	.+0      	; 0x30a <DIO_SetPortValue+0x6>
 30a:	00 d0       	rcall	.+0      	; 0x30c <DIO_SetPortValue+0x8>
 30c:	cd b7       	in	r28, 0x3d	; 61
 30e:	de b7       	in	r29, 0x3e	; 62
 310:	89 83       	std	Y+1, r24	; 0x01
 312:	6a 83       	std	Y+2, r22	; 0x02
	switch(u8PortIdCopy)
 314:	89 81       	ldd	r24, Y+1	; 0x01
 316:	28 2f       	mov	r18, r24
 318:	30 e0       	ldi	r19, 0x00	; 0
 31a:	3c 83       	std	Y+4, r19	; 0x04
 31c:	2b 83       	std	Y+3, r18	; 0x03
 31e:	8b 81       	ldd	r24, Y+3	; 0x03
 320:	9c 81       	ldd	r25, Y+4	; 0x04
 322:	81 30       	cpi	r24, 0x01	; 1
 324:	91 05       	cpc	r25, r1
 326:	d1 f0       	breq	.+52     	; 0x35c <DIO_SetPortValue+0x58>
 328:	2b 81       	ldd	r18, Y+3	; 0x03
 32a:	3c 81       	ldd	r19, Y+4	; 0x04
 32c:	22 30       	cpi	r18, 0x02	; 2
 32e:	31 05       	cpc	r19, r1
 330:	2c f4       	brge	.+10     	; 0x33c <DIO_SetPortValue+0x38>
 332:	8b 81       	ldd	r24, Y+3	; 0x03
 334:	9c 81       	ldd	r25, Y+4	; 0x04
 336:	00 97       	sbiw	r24, 0x00	; 0
 338:	61 f0       	breq	.+24     	; 0x352 <DIO_SetPortValue+0x4e>
 33a:	1e c0       	rjmp	.+60     	; 0x378 <DIO_SetPortValue+0x74>
 33c:	2b 81       	ldd	r18, Y+3	; 0x03
 33e:	3c 81       	ldd	r19, Y+4	; 0x04
 340:	22 30       	cpi	r18, 0x02	; 2
 342:	31 05       	cpc	r19, r1
 344:	81 f0       	breq	.+32     	; 0x366 <DIO_SetPortValue+0x62>
 346:	8b 81       	ldd	r24, Y+3	; 0x03
 348:	9c 81       	ldd	r25, Y+4	; 0x04
 34a:	83 30       	cpi	r24, 0x03	; 3
 34c:	91 05       	cpc	r25, r1
 34e:	81 f0       	breq	.+32     	; 0x370 <DIO_SetPortValue+0x6c>
 350:	13 c0       	rjmp	.+38     	; 0x378 <DIO_SetPortValue+0x74>
		{
		case DIO_PORTA: PORTA=u8PortValCopy;break;
 352:	eb e3       	ldi	r30, 0x3B	; 59
 354:	f0 e0       	ldi	r31, 0x00	; 0
 356:	8a 81       	ldd	r24, Y+2	; 0x02
 358:	80 83       	st	Z, r24
 35a:	0e c0       	rjmp	.+28     	; 0x378 <DIO_SetPortValue+0x74>
		case DIO_PORTB: PORTB=u8PortValCopy;break;
 35c:	e8 e3       	ldi	r30, 0x38	; 56
 35e:	f0 e0       	ldi	r31, 0x00	; 0
 360:	8a 81       	ldd	r24, Y+2	; 0x02
 362:	80 83       	st	Z, r24
 364:	09 c0       	rjmp	.+18     	; 0x378 <DIO_SetPortValue+0x74>
		case DIO_PORTC: PORTC=u8PortValCopy;break;
 366:	e5 e3       	ldi	r30, 0x35	; 53
 368:	f0 e0       	ldi	r31, 0x00	; 0
 36a:	8a 81       	ldd	r24, Y+2	; 0x02
 36c:	80 83       	st	Z, r24
 36e:	04 c0       	rjmp	.+8      	; 0x378 <DIO_SetPortValue+0x74>
		case DIO_PORTD: PORTD=u8PortValCopy;break;
 370:	e2 e3       	ldi	r30, 0x32	; 50
 372:	f0 e0       	ldi	r31, 0x00	; 0
 374:	8a 81       	ldd	r24, Y+2	; 0x02
 376:	80 83       	st	Z, r24
		}
}
 378:	0f 90       	pop	r0
 37a:	0f 90       	pop	r0
 37c:	0f 90       	pop	r0
 37e:	0f 90       	pop	r0
 380:	cf 91       	pop	r28
 382:	df 91       	pop	r29
 384:	08 95       	ret

00000386 <DIO_SetPinValue>:

void DIO_SetPinValue(u8 u8PortIdCopy,u8 u8PinIdCopy, u8 u8PinValCopy)
{
 386:	df 93       	push	r29
 388:	cf 93       	push	r28
 38a:	cd b7       	in	r28, 0x3d	; 61
 38c:	de b7       	in	r29, 0x3e	; 62
 38e:	27 97       	sbiw	r28, 0x07	; 7
 390:	0f b6       	in	r0, 0x3f	; 63
 392:	f8 94       	cli
 394:	de bf       	out	0x3e, r29	; 62
 396:	0f be       	out	0x3f, r0	; 63
 398:	cd bf       	out	0x3d, r28	; 61
 39a:	89 83       	std	Y+1, r24	; 0x01
 39c:	6a 83       	std	Y+2, r22	; 0x02
 39e:	4b 83       	std	Y+3, r20	; 0x03
	if((u8PortIdCopy<=DIO_PORTD)&&(u8PinIdCopy<=DIO_PIN7))
 3a0:	89 81       	ldd	r24, Y+1	; 0x01
 3a2:	84 30       	cpi	r24, 0x04	; 4
 3a4:	08 f0       	brcs	.+2      	; 0x3a8 <DIO_SetPinValue+0x22>
 3a6:	ee c0       	rjmp	.+476    	; 0x584 <DIO_SetPinValue+0x1fe>
 3a8:	8a 81       	ldd	r24, Y+2	; 0x02
 3aa:	88 30       	cpi	r24, 0x08	; 8
 3ac:	08 f0       	brcs	.+2      	; 0x3b0 <DIO_SetPinValue+0x2a>
 3ae:	ea c0       	rjmp	.+468    	; 0x584 <DIO_SetPinValue+0x1fe>
		{
			if(u8PinValCopy==DIO_HIGH)
 3b0:	8b 81       	ldd	r24, Y+3	; 0x03
 3b2:	81 30       	cpi	r24, 0x01	; 1
 3b4:	09 f0       	breq	.+2      	; 0x3b8 <DIO_SetPinValue+0x32>
 3b6:	6f c0       	rjmp	.+222    	; 0x496 <DIO_SetPinValue+0x110>
			{
				switch(u8PortIdCopy)
 3b8:	89 81       	ldd	r24, Y+1	; 0x01
 3ba:	28 2f       	mov	r18, r24
 3bc:	30 e0       	ldi	r19, 0x00	; 0
 3be:	3f 83       	std	Y+7, r19	; 0x07
 3c0:	2e 83       	std	Y+6, r18	; 0x06
 3c2:	8e 81       	ldd	r24, Y+6	; 0x06
 3c4:	9f 81       	ldd	r25, Y+7	; 0x07
 3c6:	81 30       	cpi	r24, 0x01	; 1
 3c8:	91 05       	cpc	r25, r1
 3ca:	49 f1       	breq	.+82     	; 0x41e <DIO_SetPinValue+0x98>
 3cc:	2e 81       	ldd	r18, Y+6	; 0x06
 3ce:	3f 81       	ldd	r19, Y+7	; 0x07
 3d0:	22 30       	cpi	r18, 0x02	; 2
 3d2:	31 05       	cpc	r19, r1
 3d4:	2c f4       	brge	.+10     	; 0x3e0 <DIO_SetPinValue+0x5a>
 3d6:	8e 81       	ldd	r24, Y+6	; 0x06
 3d8:	9f 81       	ldd	r25, Y+7	; 0x07
 3da:	00 97       	sbiw	r24, 0x00	; 0
 3dc:	61 f0       	breq	.+24     	; 0x3f6 <DIO_SetPinValue+0x70>
 3de:	d2 c0       	rjmp	.+420    	; 0x584 <DIO_SetPinValue+0x1fe>
 3e0:	2e 81       	ldd	r18, Y+6	; 0x06
 3e2:	3f 81       	ldd	r19, Y+7	; 0x07
 3e4:	22 30       	cpi	r18, 0x02	; 2
 3e6:	31 05       	cpc	r19, r1
 3e8:	71 f1       	breq	.+92     	; 0x446 <DIO_SetPinValue+0xc0>
 3ea:	8e 81       	ldd	r24, Y+6	; 0x06
 3ec:	9f 81       	ldd	r25, Y+7	; 0x07
 3ee:	83 30       	cpi	r24, 0x03	; 3
 3f0:	91 05       	cpc	r25, r1
 3f2:	e9 f1       	breq	.+122    	; 0x46e <DIO_SetPinValue+0xe8>
 3f4:	c7 c0       	rjmp	.+398    	; 0x584 <DIO_SetPinValue+0x1fe>
				{
				case DIO_PORTA:SET_BIT(PORTA,u8PinIdCopy);break;
 3f6:	ab e3       	ldi	r26, 0x3B	; 59
 3f8:	b0 e0       	ldi	r27, 0x00	; 0
 3fa:	eb e3       	ldi	r30, 0x3B	; 59
 3fc:	f0 e0       	ldi	r31, 0x00	; 0
 3fe:	80 81       	ld	r24, Z
 400:	48 2f       	mov	r20, r24
 402:	8a 81       	ldd	r24, Y+2	; 0x02
 404:	28 2f       	mov	r18, r24
 406:	30 e0       	ldi	r19, 0x00	; 0
 408:	81 e0       	ldi	r24, 0x01	; 1
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	02 2e       	mov	r0, r18
 40e:	02 c0       	rjmp	.+4      	; 0x414 <DIO_SetPinValue+0x8e>
 410:	88 0f       	add	r24, r24
 412:	99 1f       	adc	r25, r25
 414:	0a 94       	dec	r0
 416:	e2 f7       	brpl	.-8      	; 0x410 <DIO_SetPinValue+0x8a>
 418:	84 2b       	or	r24, r20
 41a:	8c 93       	st	X, r24
 41c:	b3 c0       	rjmp	.+358    	; 0x584 <DIO_SetPinValue+0x1fe>
				case DIO_PORTB:SET_BIT(PORTB,u8PinIdCopy);break;
 41e:	a8 e3       	ldi	r26, 0x38	; 56
 420:	b0 e0       	ldi	r27, 0x00	; 0
 422:	e8 e3       	ldi	r30, 0x38	; 56
 424:	f0 e0       	ldi	r31, 0x00	; 0
 426:	80 81       	ld	r24, Z
 428:	48 2f       	mov	r20, r24
 42a:	8a 81       	ldd	r24, Y+2	; 0x02
 42c:	28 2f       	mov	r18, r24
 42e:	30 e0       	ldi	r19, 0x00	; 0
 430:	81 e0       	ldi	r24, 0x01	; 1
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	02 2e       	mov	r0, r18
 436:	02 c0       	rjmp	.+4      	; 0x43c <DIO_SetPinValue+0xb6>
 438:	88 0f       	add	r24, r24
 43a:	99 1f       	adc	r25, r25
 43c:	0a 94       	dec	r0
 43e:	e2 f7       	brpl	.-8      	; 0x438 <DIO_SetPinValue+0xb2>
 440:	84 2b       	or	r24, r20
 442:	8c 93       	st	X, r24
 444:	9f c0       	rjmp	.+318    	; 0x584 <DIO_SetPinValue+0x1fe>
				case DIO_PORTC:SET_BIT(PORTC,u8PinIdCopy);break;
 446:	a5 e3       	ldi	r26, 0x35	; 53
 448:	b0 e0       	ldi	r27, 0x00	; 0
 44a:	e5 e3       	ldi	r30, 0x35	; 53
 44c:	f0 e0       	ldi	r31, 0x00	; 0
 44e:	80 81       	ld	r24, Z
 450:	48 2f       	mov	r20, r24
 452:	8a 81       	ldd	r24, Y+2	; 0x02
 454:	28 2f       	mov	r18, r24
 456:	30 e0       	ldi	r19, 0x00	; 0
 458:	81 e0       	ldi	r24, 0x01	; 1
 45a:	90 e0       	ldi	r25, 0x00	; 0
 45c:	02 2e       	mov	r0, r18
 45e:	02 c0       	rjmp	.+4      	; 0x464 <DIO_SetPinValue+0xde>
 460:	88 0f       	add	r24, r24
 462:	99 1f       	adc	r25, r25
 464:	0a 94       	dec	r0
 466:	e2 f7       	brpl	.-8      	; 0x460 <DIO_SetPinValue+0xda>
 468:	84 2b       	or	r24, r20
 46a:	8c 93       	st	X, r24
 46c:	8b c0       	rjmp	.+278    	; 0x584 <DIO_SetPinValue+0x1fe>
				case DIO_PORTD:SET_BIT(PORTD,u8PinIdCopy);break;
 46e:	a2 e3       	ldi	r26, 0x32	; 50
 470:	b0 e0       	ldi	r27, 0x00	; 0
 472:	e2 e3       	ldi	r30, 0x32	; 50
 474:	f0 e0       	ldi	r31, 0x00	; 0
 476:	80 81       	ld	r24, Z
 478:	48 2f       	mov	r20, r24
 47a:	8a 81       	ldd	r24, Y+2	; 0x02
 47c:	28 2f       	mov	r18, r24
 47e:	30 e0       	ldi	r19, 0x00	; 0
 480:	81 e0       	ldi	r24, 0x01	; 1
 482:	90 e0       	ldi	r25, 0x00	; 0
 484:	02 2e       	mov	r0, r18
 486:	02 c0       	rjmp	.+4      	; 0x48c <DIO_SetPinValue+0x106>
 488:	88 0f       	add	r24, r24
 48a:	99 1f       	adc	r25, r25
 48c:	0a 94       	dec	r0
 48e:	e2 f7       	brpl	.-8      	; 0x488 <DIO_SetPinValue+0x102>
 490:	84 2b       	or	r24, r20
 492:	8c 93       	st	X, r24
 494:	77 c0       	rjmp	.+238    	; 0x584 <DIO_SetPinValue+0x1fe>
				}
			}
			else if(u8PinValCopy==DIO_LOW)
 496:	8b 81       	ldd	r24, Y+3	; 0x03
 498:	88 23       	and	r24, r24
 49a:	09 f0       	breq	.+2      	; 0x49e <DIO_SetPinValue+0x118>
 49c:	73 c0       	rjmp	.+230    	; 0x584 <DIO_SetPinValue+0x1fe>
			{
				switch(u8PortIdCopy)
 49e:	89 81       	ldd	r24, Y+1	; 0x01
 4a0:	28 2f       	mov	r18, r24
 4a2:	30 e0       	ldi	r19, 0x00	; 0
 4a4:	3d 83       	std	Y+5, r19	; 0x05
 4a6:	2c 83       	std	Y+4, r18	; 0x04
 4a8:	8c 81       	ldd	r24, Y+4	; 0x04
 4aa:	9d 81       	ldd	r25, Y+5	; 0x05
 4ac:	81 30       	cpi	r24, 0x01	; 1
 4ae:	91 05       	cpc	r25, r1
 4b0:	59 f1       	breq	.+86     	; 0x508 <DIO_SetPinValue+0x182>
 4b2:	2c 81       	ldd	r18, Y+4	; 0x04
 4b4:	3d 81       	ldd	r19, Y+5	; 0x05
 4b6:	22 30       	cpi	r18, 0x02	; 2
 4b8:	31 05       	cpc	r19, r1
 4ba:	2c f4       	brge	.+10     	; 0x4c6 <DIO_SetPinValue+0x140>
 4bc:	8c 81       	ldd	r24, Y+4	; 0x04
 4be:	9d 81       	ldd	r25, Y+5	; 0x05
 4c0:	00 97       	sbiw	r24, 0x00	; 0
 4c2:	69 f0       	breq	.+26     	; 0x4de <DIO_SetPinValue+0x158>
 4c4:	5f c0       	rjmp	.+190    	; 0x584 <DIO_SetPinValue+0x1fe>
 4c6:	2c 81       	ldd	r18, Y+4	; 0x04
 4c8:	3d 81       	ldd	r19, Y+5	; 0x05
 4ca:	22 30       	cpi	r18, 0x02	; 2
 4cc:	31 05       	cpc	r19, r1
 4ce:	89 f1       	breq	.+98     	; 0x532 <DIO_SetPinValue+0x1ac>
 4d0:	8c 81       	ldd	r24, Y+4	; 0x04
 4d2:	9d 81       	ldd	r25, Y+5	; 0x05
 4d4:	83 30       	cpi	r24, 0x03	; 3
 4d6:	91 05       	cpc	r25, r1
 4d8:	09 f4       	brne	.+2      	; 0x4dc <DIO_SetPinValue+0x156>
 4da:	40 c0       	rjmp	.+128    	; 0x55c <DIO_SetPinValue+0x1d6>
 4dc:	53 c0       	rjmp	.+166    	; 0x584 <DIO_SetPinValue+0x1fe>
				{
				case DIO_PORTA:CLR_BIT(PORTA,u8PinIdCopy);break;
 4de:	ab e3       	ldi	r26, 0x3B	; 59
 4e0:	b0 e0       	ldi	r27, 0x00	; 0
 4e2:	eb e3       	ldi	r30, 0x3B	; 59
 4e4:	f0 e0       	ldi	r31, 0x00	; 0
 4e6:	80 81       	ld	r24, Z
 4e8:	48 2f       	mov	r20, r24
 4ea:	8a 81       	ldd	r24, Y+2	; 0x02
 4ec:	28 2f       	mov	r18, r24
 4ee:	30 e0       	ldi	r19, 0x00	; 0
 4f0:	81 e0       	ldi	r24, 0x01	; 1
 4f2:	90 e0       	ldi	r25, 0x00	; 0
 4f4:	02 2e       	mov	r0, r18
 4f6:	02 c0       	rjmp	.+4      	; 0x4fc <DIO_SetPinValue+0x176>
 4f8:	88 0f       	add	r24, r24
 4fa:	99 1f       	adc	r25, r25
 4fc:	0a 94       	dec	r0
 4fe:	e2 f7       	brpl	.-8      	; 0x4f8 <DIO_SetPinValue+0x172>
 500:	80 95       	com	r24
 502:	84 23       	and	r24, r20
 504:	8c 93       	st	X, r24
 506:	3e c0       	rjmp	.+124    	; 0x584 <DIO_SetPinValue+0x1fe>
				case DIO_PORTB:CLR_BIT(PORTB,u8PinIdCopy);break;
 508:	a8 e3       	ldi	r26, 0x38	; 56
 50a:	b0 e0       	ldi	r27, 0x00	; 0
 50c:	e8 e3       	ldi	r30, 0x38	; 56
 50e:	f0 e0       	ldi	r31, 0x00	; 0
 510:	80 81       	ld	r24, Z
 512:	48 2f       	mov	r20, r24
 514:	8a 81       	ldd	r24, Y+2	; 0x02
 516:	28 2f       	mov	r18, r24
 518:	30 e0       	ldi	r19, 0x00	; 0
 51a:	81 e0       	ldi	r24, 0x01	; 1
 51c:	90 e0       	ldi	r25, 0x00	; 0
 51e:	02 2e       	mov	r0, r18
 520:	02 c0       	rjmp	.+4      	; 0x526 <DIO_SetPinValue+0x1a0>
 522:	88 0f       	add	r24, r24
 524:	99 1f       	adc	r25, r25
 526:	0a 94       	dec	r0
 528:	e2 f7       	brpl	.-8      	; 0x522 <DIO_SetPinValue+0x19c>
 52a:	80 95       	com	r24
 52c:	84 23       	and	r24, r20
 52e:	8c 93       	st	X, r24
 530:	29 c0       	rjmp	.+82     	; 0x584 <DIO_SetPinValue+0x1fe>
				case DIO_PORTC:CLR_BIT(PORTC,u8PinIdCopy);break;
 532:	a5 e3       	ldi	r26, 0x35	; 53
 534:	b0 e0       	ldi	r27, 0x00	; 0
 536:	e5 e3       	ldi	r30, 0x35	; 53
 538:	f0 e0       	ldi	r31, 0x00	; 0
 53a:	80 81       	ld	r24, Z
 53c:	48 2f       	mov	r20, r24
 53e:	8a 81       	ldd	r24, Y+2	; 0x02
 540:	28 2f       	mov	r18, r24
 542:	30 e0       	ldi	r19, 0x00	; 0
 544:	81 e0       	ldi	r24, 0x01	; 1
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	02 2e       	mov	r0, r18
 54a:	02 c0       	rjmp	.+4      	; 0x550 <DIO_SetPinValue+0x1ca>
 54c:	88 0f       	add	r24, r24
 54e:	99 1f       	adc	r25, r25
 550:	0a 94       	dec	r0
 552:	e2 f7       	brpl	.-8      	; 0x54c <DIO_SetPinValue+0x1c6>
 554:	80 95       	com	r24
 556:	84 23       	and	r24, r20
 558:	8c 93       	st	X, r24
 55a:	14 c0       	rjmp	.+40     	; 0x584 <DIO_SetPinValue+0x1fe>
				case DIO_PORTD:CLR_BIT(PORTD,u8PinIdCopy);break;
 55c:	a2 e3       	ldi	r26, 0x32	; 50
 55e:	b0 e0       	ldi	r27, 0x00	; 0
 560:	e2 e3       	ldi	r30, 0x32	; 50
 562:	f0 e0       	ldi	r31, 0x00	; 0
 564:	80 81       	ld	r24, Z
 566:	48 2f       	mov	r20, r24
 568:	8a 81       	ldd	r24, Y+2	; 0x02
 56a:	28 2f       	mov	r18, r24
 56c:	30 e0       	ldi	r19, 0x00	; 0
 56e:	81 e0       	ldi	r24, 0x01	; 1
 570:	90 e0       	ldi	r25, 0x00	; 0
 572:	02 2e       	mov	r0, r18
 574:	02 c0       	rjmp	.+4      	; 0x57a <DIO_SetPinValue+0x1f4>
 576:	88 0f       	add	r24, r24
 578:	99 1f       	adc	r25, r25
 57a:	0a 94       	dec	r0
 57c:	e2 f7       	brpl	.-8      	; 0x576 <DIO_SetPinValue+0x1f0>
 57e:	80 95       	com	r24
 580:	84 23       	and	r24, r20
 582:	8c 93       	st	X, r24
				}
			}
			else{}
		}
		else{}
}
 584:	27 96       	adiw	r28, 0x07	; 7
 586:	0f b6       	in	r0, 0x3f	; 63
 588:	f8 94       	cli
 58a:	de bf       	out	0x3e, r29	; 62
 58c:	0f be       	out	0x3f, r0	; 63
 58e:	cd bf       	out	0x3d, r28	; 61
 590:	cf 91       	pop	r28
 592:	df 91       	pop	r29
 594:	08 95       	ret

00000596 <DIO_GetPinValue>:

u8 DIO_GetPinValue(u8 u8PortIdCopy,u8 u8PinIdCopy)
{
 596:	df 93       	push	r29
 598:	cf 93       	push	r28
 59a:	00 d0       	rcall	.+0      	; 0x59c <DIO_GetPinValue+0x6>
 59c:	00 d0       	rcall	.+0      	; 0x59e <DIO_GetPinValue+0x8>
 59e:	0f 92       	push	r0
 5a0:	cd b7       	in	r28, 0x3d	; 61
 5a2:	de b7       	in	r29, 0x3e	; 62
 5a4:	8a 83       	std	Y+2, r24	; 0x02
 5a6:	6b 83       	std	Y+3, r22	; 0x03
	u8 u8ResultLocal;
	if((u8PortIdCopy<=DIO_PORTD)&&(u8PinIdCopy<=DIO_PIN7))
 5a8:	8a 81       	ldd	r24, Y+2	; 0x02
 5aa:	84 30       	cpi	r24, 0x04	; 4
 5ac:	08 f0       	brcs	.+2      	; 0x5b0 <DIO_GetPinValue+0x1a>
 5ae:	6b c0       	rjmp	.+214    	; 0x686 <DIO_GetPinValue+0xf0>
 5b0:	8b 81       	ldd	r24, Y+3	; 0x03
 5b2:	88 30       	cpi	r24, 0x08	; 8
 5b4:	08 f0       	brcs	.+2      	; 0x5b8 <DIO_GetPinValue+0x22>
 5b6:	67 c0       	rjmp	.+206    	; 0x686 <DIO_GetPinValue+0xf0>
	{
		switch(u8PortIdCopy)
 5b8:	8a 81       	ldd	r24, Y+2	; 0x02
 5ba:	28 2f       	mov	r18, r24
 5bc:	30 e0       	ldi	r19, 0x00	; 0
 5be:	3d 83       	std	Y+5, r19	; 0x05
 5c0:	2c 83       	std	Y+4, r18	; 0x04
 5c2:	4c 81       	ldd	r20, Y+4	; 0x04
 5c4:	5d 81       	ldd	r21, Y+5	; 0x05
 5c6:	41 30       	cpi	r20, 0x01	; 1
 5c8:	51 05       	cpc	r21, r1
 5ca:	41 f1       	breq	.+80     	; 0x61c <DIO_GetPinValue+0x86>
 5cc:	8c 81       	ldd	r24, Y+4	; 0x04
 5ce:	9d 81       	ldd	r25, Y+5	; 0x05
 5d0:	82 30       	cpi	r24, 0x02	; 2
 5d2:	91 05       	cpc	r25, r1
 5d4:	34 f4       	brge	.+12     	; 0x5e2 <DIO_GetPinValue+0x4c>
 5d6:	2c 81       	ldd	r18, Y+4	; 0x04
 5d8:	3d 81       	ldd	r19, Y+5	; 0x05
 5da:	21 15       	cp	r18, r1
 5dc:	31 05       	cpc	r19, r1
 5de:	61 f0       	breq	.+24     	; 0x5f8 <DIO_GetPinValue+0x62>
 5e0:	52 c0       	rjmp	.+164    	; 0x686 <DIO_GetPinValue+0xf0>
 5e2:	4c 81       	ldd	r20, Y+4	; 0x04
 5e4:	5d 81       	ldd	r21, Y+5	; 0x05
 5e6:	42 30       	cpi	r20, 0x02	; 2
 5e8:	51 05       	cpc	r21, r1
 5ea:	51 f1       	breq	.+84     	; 0x640 <DIO_GetPinValue+0xaa>
 5ec:	8c 81       	ldd	r24, Y+4	; 0x04
 5ee:	9d 81       	ldd	r25, Y+5	; 0x05
 5f0:	83 30       	cpi	r24, 0x03	; 3
 5f2:	91 05       	cpc	r25, r1
 5f4:	b9 f1       	breq	.+110    	; 0x664 <DIO_GetPinValue+0xce>
 5f6:	47 c0       	rjmp	.+142    	; 0x686 <DIO_GetPinValue+0xf0>
		{
		case DIO_PORTA:u8ResultLocal=GET_BIT(PINA,u8PinIdCopy);break;
 5f8:	e9 e3       	ldi	r30, 0x39	; 57
 5fa:	f0 e0       	ldi	r31, 0x00	; 0
 5fc:	80 81       	ld	r24, Z
 5fe:	28 2f       	mov	r18, r24
 600:	30 e0       	ldi	r19, 0x00	; 0
 602:	8b 81       	ldd	r24, Y+3	; 0x03
 604:	88 2f       	mov	r24, r24
 606:	90 e0       	ldi	r25, 0x00	; 0
 608:	a9 01       	movw	r20, r18
 60a:	02 c0       	rjmp	.+4      	; 0x610 <DIO_GetPinValue+0x7a>
 60c:	55 95       	asr	r21
 60e:	47 95       	ror	r20
 610:	8a 95       	dec	r24
 612:	e2 f7       	brpl	.-8      	; 0x60c <DIO_GetPinValue+0x76>
 614:	ca 01       	movw	r24, r20
 616:	81 70       	andi	r24, 0x01	; 1
 618:	89 83       	std	Y+1, r24	; 0x01
 61a:	35 c0       	rjmp	.+106    	; 0x686 <DIO_GetPinValue+0xf0>
		case DIO_PORTB:u8ResultLocal=GET_BIT(PINB,u8PinIdCopy);break;
 61c:	e6 e3       	ldi	r30, 0x36	; 54
 61e:	f0 e0       	ldi	r31, 0x00	; 0
 620:	80 81       	ld	r24, Z
 622:	28 2f       	mov	r18, r24
 624:	30 e0       	ldi	r19, 0x00	; 0
 626:	8b 81       	ldd	r24, Y+3	; 0x03
 628:	88 2f       	mov	r24, r24
 62a:	90 e0       	ldi	r25, 0x00	; 0
 62c:	a9 01       	movw	r20, r18
 62e:	02 c0       	rjmp	.+4      	; 0x634 <DIO_GetPinValue+0x9e>
 630:	55 95       	asr	r21
 632:	47 95       	ror	r20
 634:	8a 95       	dec	r24
 636:	e2 f7       	brpl	.-8      	; 0x630 <DIO_GetPinValue+0x9a>
 638:	ca 01       	movw	r24, r20
 63a:	81 70       	andi	r24, 0x01	; 1
 63c:	89 83       	std	Y+1, r24	; 0x01
 63e:	23 c0       	rjmp	.+70     	; 0x686 <DIO_GetPinValue+0xf0>
		case DIO_PORTC:u8ResultLocal=GET_BIT(PINC,u8PinIdCopy);break;
 640:	e3 e3       	ldi	r30, 0x33	; 51
 642:	f0 e0       	ldi	r31, 0x00	; 0
 644:	80 81       	ld	r24, Z
 646:	28 2f       	mov	r18, r24
 648:	30 e0       	ldi	r19, 0x00	; 0
 64a:	8b 81       	ldd	r24, Y+3	; 0x03
 64c:	88 2f       	mov	r24, r24
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	a9 01       	movw	r20, r18
 652:	02 c0       	rjmp	.+4      	; 0x658 <DIO_GetPinValue+0xc2>
 654:	55 95       	asr	r21
 656:	47 95       	ror	r20
 658:	8a 95       	dec	r24
 65a:	e2 f7       	brpl	.-8      	; 0x654 <DIO_GetPinValue+0xbe>
 65c:	ca 01       	movw	r24, r20
 65e:	81 70       	andi	r24, 0x01	; 1
 660:	89 83       	std	Y+1, r24	; 0x01
 662:	11 c0       	rjmp	.+34     	; 0x686 <DIO_GetPinValue+0xf0>
		case DIO_PORTD:u8ResultLocal=GET_BIT(PIND,u8PinIdCopy);break;
 664:	e0 e3       	ldi	r30, 0x30	; 48
 666:	f0 e0       	ldi	r31, 0x00	; 0
 668:	80 81       	ld	r24, Z
 66a:	28 2f       	mov	r18, r24
 66c:	30 e0       	ldi	r19, 0x00	; 0
 66e:	8b 81       	ldd	r24, Y+3	; 0x03
 670:	88 2f       	mov	r24, r24
 672:	90 e0       	ldi	r25, 0x00	; 0
 674:	a9 01       	movw	r20, r18
 676:	02 c0       	rjmp	.+4      	; 0x67c <DIO_GetPinValue+0xe6>
 678:	55 95       	asr	r21
 67a:	47 95       	ror	r20
 67c:	8a 95       	dec	r24
 67e:	e2 f7       	brpl	.-8      	; 0x678 <DIO_GetPinValue+0xe2>
 680:	ca 01       	movw	r24, r20
 682:	81 70       	andi	r24, 0x01	; 1
 684:	89 83       	std	Y+1, r24	; 0x01
		}
	}
	else{}
	return u8ResultLocal;
 686:	89 81       	ldd	r24, Y+1	; 0x01
}
 688:	0f 90       	pop	r0
 68a:	0f 90       	pop	r0
 68c:	0f 90       	pop	r0
 68e:	0f 90       	pop	r0
 690:	0f 90       	pop	r0
 692:	cf 91       	pop	r28
 694:	df 91       	pop	r29
 696:	08 95       	ret

00000698 <main>:
#include"BIT_MATH.h"
#include"DIO.h"
#include<avr/io.h>
#include<util/delay.h>
void main(void)
{
 698:	df 93       	push	r29
 69a:	cf 93       	push	r28
 69c:	0f 92       	push	r0
 69e:	cd b7       	in	r28, 0x3d	; 61
 6a0:	de b7       	in	r29, 0x3e	; 62
	DIO_SetPinDirection(DIO_PORTA, DIO_PIN0,DIO_OUTPUT);
 6a2:	80 e0       	ldi	r24, 0x00	; 0
 6a4:	60 e0       	ldi	r22, 0x00	; 0
 6a6:	41 e0       	ldi	r20, 0x01	; 1
 6a8:	0e 94 7a 00 	call	0xf4	; 0xf4 <DIO_SetPinDirection>
	DIO_SetPinDirection(DIO_PORTD, DIO_PIN2, DIO_INPUT);
 6ac:	83 e0       	ldi	r24, 0x03	; 3
 6ae:	62 e0       	ldi	r22, 0x02	; 2
 6b0:	40 e0       	ldi	r20, 0x00	; 0
 6b2:	0e 94 7a 00 	call	0xf4	; 0xf4 <DIO_SetPinDirection>
	DIO_SetPinValue(DIO_PORTA, DIO_PIN0,DIO_LOW);
 6b6:	80 e0       	ldi	r24, 0x00	; 0
 6b8:	60 e0       	ldi	r22, 0x00	; 0
 6ba:	40 e0       	ldi	r20, 0x00	; 0
 6bc:	0e 94 c3 01 	call	0x386	; 0x386 <DIO_SetPinValue>

	while (1)
	{
		u8 res=DIO_GetPinValue(DIO_PORTD, DIO_PIN2);
 6c0:	83 e0       	ldi	r24, 0x03	; 3
 6c2:	62 e0       	ldi	r22, 0x02	; 2
 6c4:	0e 94 cb 02 	call	0x596	; 0x596 <DIO_GetPinValue>
 6c8:	89 83       	std	Y+1, r24	; 0x01
		if (res==DIO_LOW)
 6ca:	89 81       	ldd	r24, Y+1	; 0x01
 6cc:	88 23       	and	r24, r24
 6ce:	31 f4       	brne	.+12     	; 0x6dc <main+0x44>
		{
			DIO_SetPinValue(DIO_PORTA, DIO_PIN0, DIO_HIGH);
 6d0:	80 e0       	ldi	r24, 0x00	; 0
 6d2:	60 e0       	ldi	r22, 0x00	; 0
 6d4:	41 e0       	ldi	r20, 0x01	; 1
 6d6:	0e 94 c3 01 	call	0x386	; 0x386 <DIO_SetPinValue>
 6da:	f2 cf       	rjmp	.-28     	; 0x6c0 <main+0x28>
		}
		else
		{
			DIO_SetPinValue(DIO_PORTA, DIO_PIN0, DIO_LOW);
 6dc:	80 e0       	ldi	r24, 0x00	; 0
 6de:	60 e0       	ldi	r22, 0x00	; 0
 6e0:	40 e0       	ldi	r20, 0x00	; 0
 6e2:	0e 94 c3 01 	call	0x386	; 0x386 <DIO_SetPinValue>
 6e6:	ec cf       	rjmp	.-40     	; 0x6c0 <main+0x28>

000006e8 <_exit>:
 6e8:	f8 94       	cli

000006ea <__stop_program>:
 6ea:	ff cf       	rjmp	.-2      	; 0x6ea <__stop_program>
